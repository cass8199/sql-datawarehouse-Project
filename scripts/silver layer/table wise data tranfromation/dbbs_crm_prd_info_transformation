======================================================================================================
To transform raw product information from the bronze layer into a cleaned, structured,
and analysis-ready format in the silver layerâ€”ensuring standardized category data, meaningful 
product lineage, and temporal data accuracy.

 1. Table Reset & Creation
Checks if the silver.crm_prd_info table exists using OBJECT_ID and drops it if it does.

Creates a new table silver.crm_prd_info with structured fields including product details (prd_id, prd_key, prd_nm, etc.), 
and a dwh_create_date timestamp column (defaults to current datetime).

2. Data Transformation & Insertion
Source Table: bronze.crm_prd_info

Transformations Applied:

cat_id is derived from the first 5 characters of prd_key, replacing hyphens with underscores.

sales_prd_key is extracted from the remaining characters in prd_key (position 7 onwards).

prd_cost is cleaned using ISNULL() to default missing values to 0.

prd_line is mapped into readable categories (Mountain, Road, Touring, Other sales, or n/a) based on standardized input codes.

prd_start_dt is cast to DATE.

prd_end_dt is dynamically calculated using the LEAD() window function to get the next product start date, then subtracts 1 day to ensure no overlaps.


======================================================================================================

============================================================================================================

1) check for nulls or negative numbers
-- 2) low cardinality
-- 3) check for invalid date orders

--3
Select distinct prd_key 
From bronze.crm_prd_info
WHERE prd_end_dt < prd_start_dt;

Select
prd_id,
prd_key,
prd_nm,
prd_start_dt,
prd_end_dt,
DATEADD(DAY,-1, LEAD(prd_start_dt) OVER (PARTITION BY prd_key ORDER BY prd_start_dt)) AS prd_end_dt_test
from bronze.crm_prd_info
WHERE prd_key IN ('AC-HE-HL-U509-R', 'AC-HE-HL-U509');

Select distinct prd_line
From bronze.crm_prd_info;

select *
from bronze.crm_prd_info
where prd_cost < 0 or prd_cost is Null;

select prd_nm from bronze.crm_prd_info
where prd_nm != TRIM(prd_nm);

========================================================================================================================



If object_id ('silver.crm_prd_info', 'U') is not null
Drop table silver.crm_prd_info;
Create table silver.crm_prd_info(
prd_id INT,
cat_id NVARCHAR(50),
prd_key NVARCHAR(50),
prd_nm NVARCHAR(50),
prd_cost INT,
prd_line NVARCHAR(50),
prd_start_dt DATE,
prd_end_dt DATE,
dwh_create_date DATETIME2 DEFAULT GETDATE()
);

INSERT INTO silver.crm_prd_info(
	prd_id,
	cat_id ,
	prd_key,
	prd_nm,
	prd_cost,
	prd_line,
	prd_start_dt,
	prd_end_dt
)
select 
prd_id,
REPLACE(SUBSTRING(prd_key,1,5), '-', '_') as cat_id,
SUBSTRING(prd_key, 7, len(prd_key)) as sales_prd_key,
prd_nm,
ISNULL (prd_cost, 0) AS prd_cost,
CASE UPPER(TRIM(prd_line)) 
		 WHEN 'M' THEN 'Mountain'
		 WHEN  'R' THEN 'Road'	
		 WHEN  'S' THEN  'Other sales'
		 WHEN  'T' THEN  'Touring'
    ELSE 'n/a' 
END AS prd_line,
CAST (prd_start_dt AS DATE) AS prd_start_dt,
DATEADD(DAY,-1, LEAD(prd_start_dt) OVER (PARTITION BY prd_key ORDER BY prd_start_dt)) AS prd_end_dt
from bronze.crm_prd_info;
