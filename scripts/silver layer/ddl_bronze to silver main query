Print '>> Inserting Data INTO: silver.crm_cust_info'
Truncate table silver.crm_cust_info;
Print '>> Inserting Data INTO: silver.crm_cust_info'
INSERT INTO silver.crm_cust_info (
	cst_id,
	cst_key,
	cst_firstname,
	cst_lastname,	
	cst_material_status,
	cst_gndr,
	cst_create_date)

SELECT
cst_id,
cst_key,	
TRIM(cst_firstname) AS cst_firstname,
TRIM(cst_lastname) As cst_lastname,
CASE WHEN UPPER(TRIM(cst_material_status)) = 'M' THEN 'MARRIED'
	 WHEN UPPER(TRIM(cst_material_status)) = 'S' THEN 'SINGLE'
	 ELSE 'n/a'
END cst_material_status,
CASE WHEN UPPER(TRIM(cst_gndr)) = 'M' THEN 'MALE'
	WHEN UPPER(TRIM(cst_gndr)) = 'F' THEN 'FEMALE'
	ELSE 'n/a'
END cst_gndr,
cst_create_date

FROM (
Select
*, 
ROW_NUMBER() OVER (PARTITION BY cst_id ORDER BY cst_create_date DESC) as Flag_last
FROM bronze.crm_cust_info
)t WHERE flag_last = 1


Print '>> Inserting Data INTO: silver.crm_prd_info'
Truncate table silver.crm_prd_info;
Print '>> Inserting Data INTO: silver.crm_prd_info'
INSERT INTO silver.crm_prd_info(
	prd_id,
	cat_id ,
	prd_key,
	prd_nm,
	prd_cost,
	prd_line,
	prd_start_dt,
	prd_end_dt
)
select 
prd_id,
REPLACE(SUBSTRING(prd_key,1,5), '-', '_') as cat_id,
SUBSTRING(prd_key, 7, len(prd_key)) as sales_prd_key,
prd_nm,
ISNULL (prd_cost, 0) AS prd_cost,
CASE UPPER(TRIM(prd_line)) 
		 WHEN 'M' THEN 'Mountain'
		 WHEN  'R' THEN 'Road'	
		 WHEN  'S' THEN  'Other sales'
		 WHEN  'T' THEN  'Touring'
    ELSE 'n/a' 
END AS prd_line,
CAST (prd_start_dt AS DATE) AS prd_start_dt,
DATEADD(DAY,-1, LEAD(prd_start_dt) OVER (PARTITION BY prd_key ORDER BY prd_start_dt)) AS prd_end_dt
from bronze.crm_prd_info


Print '>> Inserting Data INTO: silver.crm_sales_details'
Truncate table silver.crm_sales_details;
Print '>> Inserting Data INTO: silver.crm_sales_details'
insert into silver.crm_sales_details
 (
 sls_ord_num,
 sls_prd_key,
 sls_cust_id,
 sls_order_dt,
 sls_ship_dt,
 sls_due_dt,
 sls_sale,
 sls_quantity, 
 sls_price )
		
SELECT
sls_ord_num,
sls_prd_key,
sls_cust_id,
CASE WHEN sls_order_dt = 0 OR LEN(sls_order_dt) != 8 THEN NUll
	ELSE CAST (sls_order_dt as DATE)
END AS sls_order_dt,
CASE WHEN sls_ship_dt = 0 or LEN(sls_ship_dt) != 8 THEN NULL
	ELSE CAST (sls_ship_dt as DATE)
END AS sls_ship_dt,
CASE WHEN sls_due_dt = 0 or LEN(sls_due_dt) != 8 THEN NULL
	ELSE CAST (sls_due_dt as DATE)
END AS sls_due_dt,
case when sls_sale is null or sls_sale <= 0 OR sls_sale != sls_quantity * ABS(sls_price)
	THEN sls_quantity * ABS(sls_price)
	else sls_sale
END AS sls_sales,
sls_quantity,
case when sls_price is null or sls_price <= 0
	Then sls_sale / NULLIF(sls_quantity,0)
	else sls_price
END AS sls_price
from bronze.crm_sales_details

Print '>> Inserting Data INTO: silver.erp_LOC_A101'
Truncate table silver.erp_LOC_A101;
Print '>> Inserting Data INTO: silver.erp_LOC_A101'
insert into silver.erp_LOC_A101
(
cid,
cntry)
Select
replace(cid, '-','') cid, 
CASE When trim(cntry) = 'DE' THEN 'Germany'
	 WHEN trim(cntry) IN ('US', 'USA') THEN 'United States'
	 WHEN TRIM (cntry) = '' or cntry is NULL then 'n/a'
	 ELSE TRIM(cntry)
end cntry
from bronze.erp_LOC_A101


Print '>> Inserting Data INTO: silver.erp_cust_az12'
Truncate table silver.erp_cust_az12;
Print '>> Inserting Data INTO: silver.erp_cust_az12'
insert into silver.erp_cust_az12 
(
cid,
bdate,
gen)

select
CASE when cid like 'NAS%' then substring(cid,4,len(cid))
	else cid
end cid,
case when bdate > GETDATE() then NULL 
	else bdate
end bdate,
CASE WHEN Upper(TRIM(gen)) IN ('F', 'FEMALE') THEN 'FEMALE'
	 WHEN Upper(TRIM(gen)) IN ('M', 'MALE') THEN 'MALE'
	 ELSE 'n/a'
END AS gen
from bronze.erp_Cust_AZ12


Print '>> Inserting Data INTO: silver.erp_PX_CAT_G1V2'
Truncate table silver.erp_PX_CAT_G1V2;
Print '>> Inserting Data INTO: silver.erp_PX_CAT_G1V2'
insert into silver.erp_PX_CAT_G1V2
(
id,
cat,
subcat,
maintenance)
select 
id,
cat,
subcat,
maintenance
from bronze.erp_PX_CAT_G1V2;
